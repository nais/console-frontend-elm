name: Build and deploy image
on:
  push:
    branches:
      - main
    paths-ignore:
      - "charts/**"
env:
  REGISTRY: europe-north1-docker.pkg.dev/nais-io/nais/images
jobs:
  build_and_push:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    outputs:
      "version": ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # ratchet:actions/checkout@v3
      - name: Generate version
        id: version
        run: echo "version=$(date +'%Y%m%d-%H%M%S')-$(git rev-parse --short HEAD)" >> ${GITHUB_OUTPUT}
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@dac4e13deb3640f22e3ffe758fd3f95e6e89f712" # ratchet:google-github-actions/auth@v0.8.1
        with:
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: "gh-console-frontend@nais-io.iam.gserviceaccount.com"
          token_format: "access_token"
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # ratchet:docker/setup-buildx-action@v2
      - name: Login to registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # ratchet:docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
      - name: Docker meta
        id: metadata
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # ratchet:docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/console-frontend
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=sha
            type=raw,value=${{ steps.version.outputs.version }}
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@1104d471370f9806843c095c1db02b5a90c5f8b6 # ratchet:docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      # Elm stuff must be built before we can make an accurate SBOM
      - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # ratchet:actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm run build
      - name: Install cosign
        uses: sigstore/cosign-installer@bd2d1189b064bcddc3903176a807dcdba72d7fd0 # ratchet:sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.0.0'
      - name: Sign the container image
        run: cosign sign --yes ${{ env.REGISTRY }}/console-frontend@${{ steps.build-push.outputs.digest }}
      - name: Create SBOM
        run: npx @cyclonedx/cyclonedx-npm --output-file sbom.json --output-format json
      - name: Attest image
        run: cosign attest --yes --predicate sbom.json --type cyclonedx ${{ env.REGISTRY }}/console-frontend@${{ steps.build-push.outputs.digest }}
  rollout:
    permissions:
      id-token: write
    needs: ["build_and_push"]
    runs-on: fasit-deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: nais/fasit-deploy@b2c0b6d049b53bef41b321eec406fe66938576fd # ratchet:nais/fasit-deploy@main
        with:
          json: '{"frontend": {"image": {"tag": "${{ needs.build_and_push.outputs.version }}"}}}'
          feature_name: console
