-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Backend.Object.AuditLog exposing (..)

import Backend.InputObject
import Backend.Interface
import Backend.Object
import Backend.Scalar
import Backend.ScalarCodecs
import Backend.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| ID of the log entry.
-}
id : SelectionSet Backend.ScalarCodecs.Uuid Backend.Object.AuditLog
id =
    Object.selectionForField "ScalarCodecs.Uuid" "id" [] (Backend.ScalarCodecs.codecs |> Backend.Scalar.unwrapCodecs |> .codecUuid |> .decoder)


{-| String representation of the action performed.
-}
action : SelectionSet Backend.ScalarCodecs.AuditAction Backend.Object.AuditLog
action =
    Object.selectionForField "ScalarCodecs.AuditAction" "action" [] (Backend.ScalarCodecs.codecs |> Backend.Scalar.unwrapCodecs |> .codecAuditAction |> .decoder)


{-| The related system.
-}
systemName : SelectionSet Backend.ScalarCodecs.SystemName Backend.Object.AuditLog
systemName =
    Object.selectionForField "ScalarCodecs.SystemName" "systemName" [] (Backend.ScalarCodecs.codecs |> Backend.Scalar.unwrapCodecs |> .codecSystemName |> .decoder)


{-| The related correlation.
-}
correlationID : SelectionSet Backend.ScalarCodecs.Uuid Backend.Object.AuditLog
correlationID =
    Object.selectionForField "ScalarCodecs.Uuid" "correlationID" [] (Backend.ScalarCodecs.codecs |> Backend.Scalar.unwrapCodecs |> .codecUuid |> .decoder)


{-| The email address of the actor who performed the action. When this field is empty it means that some backend process performed the action.
-}
actorEmail : SelectionSet (Maybe String) Backend.Object.AuditLog
actorEmail =
    Object.selectionForField "(Maybe String)" "actorEmail" [] (Decode.string |> Decode.nullable)


{-| The email address of the target user, if any.
-}
targetUserEmail : SelectionSet (Maybe String) Backend.Object.AuditLog
targetUserEmail =
    Object.selectionForField "(Maybe String)" "targetUserEmail" [] (Decode.string |> Decode.nullable)


{-| The target team slug, if any.
-}
targetTeamSlug : SelectionSet (Maybe Backend.ScalarCodecs.Slug) Backend.Object.AuditLog
targetTeamSlug =
    Object.selectionForField "(Maybe ScalarCodecs.Slug)" "targetTeamSlug" [] (Backend.ScalarCodecs.codecs |> Backend.Scalar.unwrapCodecs |> .codecSlug |> .decoder |> Decode.nullable)


{-| Log entry message.
-}
message : SelectionSet String Backend.Object.AuditLog
message =
    Object.selectionForField "String" "message" [] Decode.string


{-| Creation time of the log entry.
-}
createdAt : SelectionSet Backend.ScalarCodecs.Time Backend.Object.AuditLog
createdAt =
    Object.selectionForField "ScalarCodecs.Time" "createdAt" [] (Backend.ScalarCodecs.codecs |> Backend.Scalar.unwrapCodecs |> .codecTime |> .decoder)
