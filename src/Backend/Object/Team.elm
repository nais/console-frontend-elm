-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Backend.Object.Team exposing (..)

import Backend.InputObject
import Backend.Interface
import Backend.Object
import Backend.Scalar
import Backend.ScalarCodecs
import Backend.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| ID of the team.
-}
id : SelectionSet Backend.ScalarCodecs.Uuid Backend.Object.Team
id =
    Object.selectionForField "ScalarCodecs.Uuid" "id" [] (Backend.ScalarCodecs.codecs |> Backend.Scalar.unwrapCodecs |> .codecUuid |> .decoder)


{-| Unique slug of the team.
-}
slug : SelectionSet Backend.ScalarCodecs.Slug Backend.Object.Team
slug =
    Object.selectionForField "ScalarCodecs.Slug" "slug" [] (Backend.ScalarCodecs.codecs |> Backend.Scalar.unwrapCodecs |> .codecSlug |> .decoder)


{-| Display name of the team.
-}
name : SelectionSet String Backend.Object.Team
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| Purpose of the team.
-}
purpose : SelectionSet (Maybe String) Backend.Object.Team
purpose =
    Object.selectionForField "(Maybe String)" "purpose" [] (Decode.string |> Decode.nullable)


{-| Metadata attached to the team as a key => value map.
-}
metadata : SelectionSet (Maybe Backend.ScalarCodecs.Map) Backend.Object.Team
metadata =
    Object.selectionForField "(Maybe ScalarCodecs.Map)" "metadata" [] (Backend.ScalarCodecs.codecs |> Backend.Scalar.unwrapCodecs |> .codecMap |> .decoder |> Decode.nullable)


{-| Audit logs for this team.
-}
auditLogs :
    SelectionSet decodesTo Backend.Object.AuditLog
    -> SelectionSet (List decodesTo) Backend.Object.Team
auditLogs object____ =
    Object.selectionForCompositeField "auditLogs" [] object____ (Basics.identity >> Decode.list)


{-| Team members.
-}
members :
    SelectionSet decodesTo Backend.Object.TeamMember
    -> SelectionSet (List decodesTo) Backend.Object.Team
members object____ =
    Object.selectionForCompositeField "members" [] object____ (Basics.identity >> Decode.list)
