-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Backend.Object.Team exposing (..)

import Backend.Object
import Backend.Scalar
import Backend.ScalarCodecs
import Graphql.Internal.Builder.Object as Object
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| ID of the team.
-}
id : SelectionSet Backend.ScalarCodecs.Uuid Backend.Object.Team
id =
    Object.selectionForField "ScalarCodecs.Uuid" "id" [] (Backend.ScalarCodecs.codecs |> Backend.Scalar.unwrapCodecs |> .codecUuid |> .decoder)


{-| Unique slug of the team.
-}
slug : SelectionSet Backend.ScalarCodecs.Slug Backend.Object.Team
slug =
    Object.selectionForField "ScalarCodecs.Slug" "slug" [] (Backend.ScalarCodecs.codecs |> Backend.Scalar.unwrapCodecs |> .codecSlug |> .decoder)


{-| Display name of the team.
-}
name : SelectionSet String Backend.Object.Team
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| Purpose of the team.
-}
purpose : SelectionSet (Maybe String) Backend.Object.Team
purpose =
    Object.selectionForField "(Maybe String)" "purpose" [] (Decode.string |> Decode.nullable)


{-| Metadata attached to the team.
-}
metadata :
    SelectionSet decodesTo Backend.Object.TeamMetadata
    -> SelectionSet (List decodesTo) Backend.Object.Team
metadata object____ =
    Object.selectionForCompositeField "metadata" [] object____ (Basics.identity >> Decode.list)


{-| Audit logs for this team.
-}
auditLogs :
    SelectionSet decodesTo Backend.Object.AuditLog
    -> SelectionSet (List decodesTo) Backend.Object.Team
auditLogs object____ =
    Object.selectionForCompositeField "auditLogs" [] object____ (Basics.identity >> Decode.list)


{-| Team members.
-}
members :
    SelectionSet decodesTo Backend.Object.TeamMember
    -> SelectionSet (List decodesTo) Backend.Object.Team
members object____ =
    Object.selectionForCompositeField "members" [] object____ (Basics.identity >> Decode.list)


{-| Possible issues related to synchronization of the team to configured external systems. If there are no entries the team can be considered fully synchronized.
-}
syncErrors :
    SelectionSet decodesTo Backend.Object.SyncError
    -> SelectionSet (List decodesTo) Backend.Object.Team
syncErrors object____ =
    Object.selectionForCompositeField "syncErrors" [] object____ (Basics.identity >> Decode.list)


{-| Whether or not the team is enabled.
-}
enabled : SelectionSet Bool Backend.Object.Team
enabled =
    Object.selectionForField "Bool" "enabled" [] Decode.bool
