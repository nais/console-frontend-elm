-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Backend.Object.ServiceAccount exposing (..)

import Backend.InputObject
import Backend.Interface
import Backend.Object
import Backend.Scalar
import Backend.ScalarCodecs
import Backend.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Unique ID of the service account.
-}
id : SelectionSet Backend.ScalarCodecs.Uuid Backend.Object.ServiceAccount
id =
    Object.selectionForField "ScalarCodecs.Uuid" "id" [] (Backend.ScalarCodecs.codecs |> Backend.Scalar.unwrapCodecs |> .codecUuid |> .decoder)


{-| The name of the service account.
-}
name : SelectionSet String Backend.Object.ServiceAccount
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| Roles attached to the service account.
-}
roles :
    SelectionSet decodesTo Backend.Object.Role
    -> SelectionSet (List decodesTo) Backend.Object.ServiceAccount
roles object____ =
    Object.selectionForCompositeField "roles" [] object____ (Basics.identity >> Decode.list)
